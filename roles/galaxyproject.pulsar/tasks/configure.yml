---
# Manage config files

- name: Static config setup
  block:

    - name: Create Pulsar config dir
      file:
        state: directory
        path: "{{ pulsar_config_dir }}"
        mode: "0755"
      notify:
        - "{{ pulsar_restart_handler_name | default('default restart pulsar handler') }}"

    - name: Create Pulsar app configuration file
      template:
        src: app.yml.j2
        dest: "{{ pulsar_config_dir }}/app.yml"
        mode: "0444"
        backup: yes
      notify:
        - "{{ pulsar_restart_handler_name | default('default restart pulsar handler') }}"

    - name: Create Pulsar job metrics configuration file
      template:
        src: "plugin_config.yml.j2"
        # this uses Python os.path.join which effectively ignores the previous elements in the list if later elements
        # are absolute paths, so this works regardless of whether pulsar_yaml_config_merged.job_metrics_config_file is
        # relative or absolute
        dest: "{{ (pulsar_config_dir, pulsar_yaml_config_merged.job_metrics_config_file) | path_join }}"
        mode: "0644"
      vars:
        __pulsar_plugin_config: "{{ pulsar_job_metrics_plugins }}"
      when: pulsar_job_metrics_plugins is defined
      notify:
        - "{{ pulsar_restart_handler_name | default('default restart pulsar handler') }}"

    - name: Create additional Pulsar config files
      template:
        src: "{{ item }}.j2"
        dest: "{{ pulsar_config_dir }}/{{ item }}"
        mode: 0444
        backup: yes
      loop:
        - server.ini
        - local_env.sh
      notify:
        - "{{ pulsar_restart_handler_name | default('default restart pulsar handler') }}"

  remote_user: "{{ pulsar_remote_users.privsep | default(__pulsar_remote_user) }}"
  become: "{{ true if pulsar_become_users.privsep is defined else __pulsar_become }}"
  become_user: "{{ pulsar_become_users.privsep | default(__pulsar_become_user) }}"
